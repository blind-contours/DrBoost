% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_thresholds_list.R
\name{build_thresholds_list}
\alias{build_thresholds_list}
\title{Build Thresholds List for Disjoint Rule Boosting}
\usage{
build_thresholds_list(
  X,
  feature_types = NULL,
  num_thresholds = 50,
  bin_continuous = TRUE
)
}
\arguments{
\item{X}{A numeric matrix of size (n x p).}

\item{feature_types}{A character vector of length p,
each element one of \{"binary", "ordinal", "continuous"\}.
If \code{NULL}, attempts a simple guess:
if a column has only \{0,1\}, we call it "binary"; else "continuous".}

\item{num_thresholds}{Maximum number of thresholds to store per feature (for
\code{"continuous"} or \code{"ordinal"}).}

\item{bin_continuous}{Logical. If \code{TRUE}, we pick uniform quantiles
(excluding min/max). If \code{FALSE}, we attempt to extract unique sorted
values (excluding extremes).}
}
\value{
A numeric matrix of shape \code{(num_thresholds x p)}, where each
column is the candidate thresholds for that feature, possibly with
\code{NA_real_} if fewer than \code{num_thresholds} thresholds exist.
}
\description{
Constructs a matrix of threshold candidates (cutpoints) for each feature.
By default, this function attempts to guess if a feature is "binary"
or "continuous", but you may also specify a \code{feature_types} vector
with entries in \{"binary","ordinal","continuous"\}.
}
\examples{
X <- matrix(runif(100), nrow = 20) # 20 obs x 5 features
feature_types <- c("continuous","binary","continuous","ordinal","continuous")
thresh_list <- build_thresholds_list(X, feature_types, num_thresholds=10)

}
