% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DrBoost.R
\name{disjoint_rule_boost}
\alias{disjoint_rule_boost}
\title{disjoint_rule_boost}
\usage{
disjoint_rule_boost(
  X_train,
  Y_train,
  X_val,
  Y_val,
  outcome_type = c("continuous", "binary"),
  thresholds_list,
  max_pass1_iter = 100,
  max_dim_refine = 4,
  patience = 5,
  learning_rate = 0.05,
  min_obs_pct = 0.001,
  max_obs_frac = 1,
  K1 = 300,
  K2 = 300,
  K3 = 300,
  K4 = 300,
  second_order_logistic = FALSE,
  max_overlap = 1,
  refine_leftover = TRUE,
  mini_batch_frac = 1,
  mini_batch_frac_2 = 1,
  ...
)
}
\arguments{
\item{X_train, Y_train}{numeric training data}

\item{X_val, Y_val}{numeric validation data}

\item{outcome_type}{"continuous" or "binary"}

\item{thresholds_list}{numeric matrix (row= threshold index, col=feature)}

\item{max_pass1_iter}{integer}

\item{max_dim_refine}{up to 4D expansions in pass2}

\item{patience}{integer => how many "worse" validations to allow}

\item{learning_rate}{numeric => scale local fit}

\item{min_obs_pct}{numeric => fraction for min coverage}

\item{max_obs_frac}{numeric => fraction for max coverage}

\item{K1, K2, K3, K4}{integer => beam widths}

\item{second_order_logistic}{bool => not fully used here}

\item{max_overlap}{integer => e.g. 1 => disjoint}

\item{refine_leftover}{bool => add leftover box}

\item{mini_batch_frac}{numeric => fraction of training to sample for pass1}

\item{mini_batch_frac_2}{numeric => fraction for pass2}

\item{...}{passed to find_best_region_beam_cpp}
}
\value{
A list with final model details, including:
\itemize{
\item $init (global intercept)
\item $rule_list (each rule w/ $region_info and numeric $beta vector)
\item final predictions on train and val
}
}
\description{
A two-pass approach:
\enumerate{
\item Pass 1 uses mini-batch sampling to pick bounding boxes (up to ~2D).
\item Pass 2 prunes/refines each box, possibly w/ expansions up to 4D.
}

For continuous data, auto-choose local model type among
{"constant","linear","poly2"} if coverage is large enough.
For binary, do piecewise-constant shifts.
}
